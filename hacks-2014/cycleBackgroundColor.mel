// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

//  Description:
//      Cycles the background color of viewports, and then to gradient display
//
//  Return Value:
//      None.
//
global proc cycleBackgroundColor(){

	int $gradOn = `displayPref -q -displayGradient`;
	if ($gradOn)
	{
		
		/* DRL:
			order:
				* bright
				* middle (top is default, bottom is a little brighter)
				* dark (bottom is default, top is drker)
				* switch to black color
		*/
		
		float $rgbTop[3] = `displayRGBColor -query backgroundTop`;
		
		if ($rgbTop[2] > 0.72) {
			// bright -> default
			displayRGBColor backgroundTop 0.535 0.617 0.702;  // default
			displayRGBColor backgroundBottom 0.1 0.1 0.1;
		}
		else if ($rgbTop[2] > 0.7) {
			// default -> dark
			displayRGBColor backgroundTop 0.2675 0.3085 0.351;
			displayRGBColor backgroundBottom 0.052 0.052 0.052;  // default
		}
		else {
			displayRGBColor background 0 0 0;
			displayPref -displayGradient 0;
		}
		
	}
	else
	{
		// query bg color
		float $rgb[3] = `displayRGBColor -query background`;
		/*
		if ($rgb[0] < 0.05)
		{
			displayRGBColor background 0.1 0.1 0.1;
		}
		else
		*/
		if ($rgb[0] < 0.15)
		{
			displayRGBColor background 0.2 0.2 0.2;
		}
		else if ($rgb[0] < 0.3)
		{
			displayRGBColor background 0.333333 0.333333 0.333333;
		}
		else if ($rgb[0] < 0.5)
		{
			displayRGBColor background 0.75 0.75 0.75;  //default color
		}
		else
		{
			// DRL:
			displayRGBColor backgroundTop 0.535 0.675 0.8;
			displayRGBColor backgroundBottom 0.16 0.18 0.2;
			displayPref -displayGradient 1;
		}
	}

	optionVar -intValue "displayViewportGradient" `displayPref -query -displayGradient`;
}
